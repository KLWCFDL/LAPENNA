/************************************************************************
 * Write an MPI "hello World!" program using the appropriate MPI calls.
 ************************************************************************/

/**************************
1.Include the header
**************************/
#include	<stdio.h>
#include	<mpi.h>

void main(int argc, char *argv[])
{
  char message[20];
  MPI_Status status;
  int i,rank, size, type=11;
  
  /**************************
   2.Initialize MPI 
  **************************/
  MPI_Init(&argc, &argv);

  MPI_XXXX_XXXX(MPI_COMM_WORLD,&size);
  MPI_XXXX_XXXX(MPI_COMM_WORLD, &rank);

  /**************************
      3.Check its rank, and 
  **************************/
  if(XXXXXXXXX) {
    strcpy(message, "Hello world!");
    /**************************
      a.if the process is the master, then send a "Hello World!" 
        message, in characters, to each of the workers.
    **************************/
    for (i=1; i<size; i++) 
      MPI_XXXX(message, 13, XXXXXXXX, i, type, XXXXXXXXXXXXXX);
  } 
  else {
    /**************************
      b.if the process is a worker, then receive the "Hello World!" 
        message and print it out.
    **************************/
    MPI_XXXX(XXXXXXX, 20, MPI_CHAR, X, XXXX, XXXXXXXXXXXXXX, XXXXXXX);
    printf( "Node %d : %.13s\n", rank,message);
  }

  /**************************
    4.Finalize MPI 
  **************************/
  MPI_XXXXXXXX();
}/* End Main */

