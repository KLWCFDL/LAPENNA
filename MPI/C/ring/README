***---> readme file for the ring.c file/exercise <---***

In this code the processes arrange themselves in a "ring"
based on their process ID numbers.  For example a ring of
four processes would look like:

				0
			       / \
			      /   \
			     1     3
			      \   /
			       \ /
				2

Each process stores its rank as an integer value and
sends this value to the process on its right.  each 
process then receives the rank value of the process on
its left.  The processes keep track of the sum of all
of the integer values it receives and continue to pass
values until they receive their own ranks back.  The 
processes then print the sum total of all of the 
process ID ranks.  When compiled and run correctly the
output should look similar to the following:

  Proc   1 Sum =   6
  Proc   2 Sum =   6
  Proc   3 Sum =   6
  Proc   0 Sum =   6
